/* ResidualVM - A 3D game interpreter
 *
 * ResidualVM is the legal property of its developers, whose names
 * are too numerous to list here. Please refer to the AUTHORS
 * file distributed with this source distribution.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *
 */

#ifndef STARK_TESTS_TEST_H
#define STARK_TESTS_TEST_H

#include "common/rect.h"

#include "math/vector3d.h"

namespace Stark {
namespace Tests {

class ActionLog;

/**
 * Base class for a gameplay test that plays back an action log
 */
class ActionLogTest {
public:
	ActionLogTest();
	virtual ~ActionLogTest();

	/**
	 * Tests should implement this method to set the required game state
	 */
	virtual void setUp() {}

	/**
	 * Build an action log to play back to run the test
	 */
	virtual void test() = 0;

	/**
	 * Get the action log generated by the test and take ownership of it.
	 */
	virtual ActionLog *takeActionLog();

	// Actions
	void walkTo(const Math::Vector3d &destination);
	void interactWithItemAt(const Common::String &itemRefStr, uint32 action, const Common::Point &position);

	// Assertions
	void assertLocation(uint16 level, uint16 location, uint32 timeout = 5000);
	void assertHasInventoryItem(const Common::String &name, uint32 timeout = 5000);
protected:

	ActionLog *_log;
};

/**
 * Create a test from the test suite from its name
 */
ActionLogTest *makeTestByName(const char *name);

} // End of namespace Tests
} // End of namespace Stark

#endif // STARK_TESTS_TEST_H
